3. Fazer um programa para simular uma agenda de telefones. Uma das
entidades básicas deste programa seria Contato. Eis alguns atributos dessa
entidade (pesquise por outros):
- Nome
- Observações
- Data de Aniversário
' Definir a classe acima.
' Identificar ao menos 2 tipos específicos da classe supramencionada e
implementar em classes específicas. Variáveis com tipo referência Receita
sempre devem ter o tipo de instância como uma das classes específicas que
você identificar e implementar.
' Declarar uma classe que possa manipular e agregar até 100 entidades da
classe supramencionada.
' Definir um bloco de instruções: busca por nome: Imprime os dados da
pessoa com esse nome (se tiver mais de uma pessoa, imprime para todas).
' Definir um bloco de instruções: busca por dia e mês de aniversário:
Imprime os dados de todas as pessoas que fazem aniversário nesse dia e
mês.
' Definir um bloco de instruções: insere pessoa.
' Definir um bloco de instruções: imprime agenda com as opções:
- imprime nome, telefone e e-mail.
- imprime todos os dados.
' Imprimir a pessoa mais velha da agenda e a mais nova.
' O programa deve ter um menu principal oferecendo as opções acima.

2. CRITÉRIO DE AVALIAÇÃO (TRABALHO VALE 10.0 pts -
INDIVIDUAL)
? O programa deve atender a todas as especificações e restrições
do tema escolhido. (3,00 pts);
? O programa deve ser implementado de modo a empregar os
conceitos de Herança, Encapsulamento e Polimorfismo. (3,00
pts);
? O programa deve ser implementado aplicando tratamento de
exceções. Você também deve criar pelo menos uma Exceção
personalizada e referência-la em algum trecho do seu código.
(1,00 pts);
? O programa deve dispor de pelo menos: 1 classe abstrata; e, 1
Interface. (1,00 pts);
? Empregar utilitários da API do Java. (1,00 pts);
? Implemente métodos que, com base na(s) classe(s) abstratas e
interface(s) implementadas, façam uso de Polimorfismo e o
mecanismo de ligação tardia. (1,00 pts).
3. FORMATO DE ENTREGA
O código fonte do programa deve ser entregue ao professor em um arquivo
PDF. Se for constatado copia de código entre trabalhos de autoria diferente
ou código que não seja do autoria do aluno, o nota do trabalho será zerada.
Haja vista que a forma como o aluno decide implementar o que se pede é
bastante subjetiva, é fácil reconhecer cópia entre trabalhos.
O arquivo PDF com o código fonte também deve dispor de evidências do
software funcionando. Exemplos de como evidenciar que seu software está
funcional:
- Arranjar prints no PDF de forma a mostrar os processos
funcionando corretamente no seu software;
- Gravar um vídeo do software funcionando, subir o mesmo em
alguma plataforma de streaming (como o YouTube) e postar o link
do vídeo no PDF com o código fonte.
Sinta-se livre para estruturar da forma como preferir o seu arquivo PDF
contendo código fonte e meio de evidência. Uma estrutura genérica seria:
capa; seção de descrição do tema; seção de código fonte; seção de
evidência.
OBS: não evidenciar o funcionamento da aplicação levará a penalidade de
5,00 pontos.
